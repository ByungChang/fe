<<<<<<< HEAD
2019-11-01 08:53:19 [METHOD] - "/company"에 get실행
2019-11-01 08:53:20 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:53:20 [METHOD] - "/company"에 get실행완료
2019-11-01 08:53:57 [METHOD] - "/company"에 post실행
2019-11-01 08:53:57 [QUERY] - INSERT INTO `companys` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?);
2019-11-01 08:53:57 [QUERY] - INSERT INTO `branchs` (`id`,`name`,`expiredDate`,`companyId`,`busNumber`,`isMain`,`tel`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?);
2019-11-01 08:53:57 [METHOD] - "/company"에 post실행완료
2019-11-01 08:53:57 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:53:57 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:53:58 [METHOD] - "/company"에 get실행
2019-11-01 08:53:58 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:53:58 [METHOD] - "/company"에 get실행완료
2019-11-01 08:54:03 [METHOD] - "/company/user"에 post실행
2019-11-01 08:54:03 [METHOD] - "/company/user"에 post실행완료
2019-11-01 08:54:12 [METHOD] - "/company"에 get실행
2019-11-01 08:54:12 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:54:12 [METHOD] - "/company"에 get실행완료
2019-11-01 08:54:15 [METHOD] - "/company"에 delete실행
2019-11-01 08:54:15 [METHOD] - "/company"에 delete실행완료
2019-11-01 08:54:15 [METHOD] - "/company"에 delete실행
2019-11-01 08:54:15 [METHOD] - "/company"에 delete실행완료
2019-11-01 08:54:15 [QUERY] - DELETE FROM `branch_devices` WHERE `branchId` = 11
2019-11-01 08:54:15 [QUERY] - DELETE FROM `user_groups` WHERE `branchId` = 11
2019-11-01 08:54:15 [QUERY] - DELETE FROM `branchs` WHERE `id` = 11
2019-11-01 08:54:15 [QUERY] - DELETE FROM `companys` WHERE `id` = 14
2019-11-01 08:54:15 [METHOD] - "/company"에 get실행
2019-11-01 08:54:15 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:54:15 [METHOD] - "/company"에 get실행완료
2019-11-01 08:55:26 [METHOD] - "/company"에 post실행
2019-11-01 08:55:26 [QUERY] - INSERT INTO `companys` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?);
2019-11-01 08:55:26 [QUERY] - INSERT INTO `branchs` (`id`,`name`,`expiredDate`,`companyId`,`busNumber`,`isMain`,`tel`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?);
2019-11-01 08:55:26 [METHOD] - "/company"에 post실행완료
2019-11-01 08:55:26 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:55:26 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:55:28 [METHOD] - "/company"에 get실행
2019-11-01 08:55:28 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:55:28 [METHOD] - "/company"에 get실행완료
2019-11-01 08:55:55 [METHOD] - "/company"에 post실행
2019-11-01 08:55:55 [QUERY] - INSERT INTO `companys` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?);
2019-11-01 08:55:55 [QUERY] - INSERT INTO `branchs` (`id`,`name`,`expiredDate`,`companyId`,`busNumber`,`isMain`,`tel`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?);
2019-11-01 08:55:55 [METHOD] - "/company"에 post실행완료
2019-11-01 08:55:55 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:55:55 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:55:55 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:55:56 [METHOD] - "/company"에 get실행
2019-11-01 08:55:56 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:55:56 [METHOD] - "/company"에 get실행완료
2019-11-01 08:56:49 [METHOD] - "/company"에 post실행
2019-11-01 08:56:49 [QUERY] - INSERT INTO `companys` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?);
2019-11-01 08:56:49 [QUERY] - INSERT INTO `branchs` (`id`,`name`,`expiredDate`,`companyId`,`busNumber`,`isMain`,`tel`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?);
2019-11-01 08:56:49 [METHOD] - "/company"에 post실행완료
2019-11-01 08:56:49 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:56:49 [QUERY] - INSERT INTO `branch_devices` (`id`,`deviceId`,`location`,`branchId`,`descript`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?);
2019-11-01 08:56:50 [METHOD] - "/company"에 get실행
2019-11-01 08:56:50 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 08:56:50 [METHOD] - "/company"에 get실행완료
2019-11-01 08:56:58 [METHOD] - "/company/user"에 post실행
2019-11-01 08:56:58 [METHOD] - "/company/user"에 post실행완료
2019-11-01 09:00:26 [METHOD] - "/company"에 get실행
2019-11-01 09:00:26 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:00:26 [METHOD] - "/company"에 get실행완료
2019-11-01 09:00:30 [METHOD] - "/company/user"에 post실행
2019-11-01 09:00:30 [METHOD] - "/company/user"에 post실행완료
2019-11-01 09:02:51 [METHOD] - "/company"에 get실행
2019-11-01 09:02:51 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:02:51 [METHOD] - "/company"에 get실행완료
2019-11-01 09:02:52 [METHOD] - "/company/user"에 post실행
2019-11-01 09:02:52 [METHOD] - "/company/user"에 post실행완료
2019-11-01 09:05:35 [METHOD] - "/company"에 get실행
2019-11-01 09:05:35 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:05:35 [METHOD] - "/company"에 get실행완료
2019-11-01 09:06:49 [METHOD] - "/company/user"에 post실행
2019-11-01 09:06:49 [METHOD] - "/company/user"에 post실행완료
2019-11-01 09:06:52 [METHOD] - "/company"에 get실행
2019-11-01 09:06:52 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:06:52 [METHOD] - "/company"에 get실행완료
2019-11-01 09:07:14 [METHOD] - "/company"에 get실행
2019-11-01 09:07:14 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:07:14 [METHOD] - "/company"에 get실행완료
2019-11-01 09:50:20 [METHOD] - "/company"에 get실행
2019-11-01 09:50:20 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:50:20 [METHOD] - "/company"에 get실행완료
2019-11-01 09:50:21 [METHOD] - "/company/user"에 post실행
2019-11-01 09:50:21 [METHOD] - "/company/user"에 post실행완료
2019-11-01 09:50:25 [METHOD] - "/company"에 get실행
2019-11-01 09:50:25 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:50:25 [METHOD] - "/company"에 get실행완료
2019-11-01 09:50:29 [METHOD] - "/company/user"에 post실행
2019-11-01 09:50:29 [METHOD] - "/company/user"에 post실행완료
2019-11-01 09:50:30 [METHOD] - "/company"에 get실행
2019-11-01 09:50:30 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:50:30 [METHOD] - "/company"에 get실행완료
2019-11-01 09:55:05 [METHOD] - "/company"에 get실행
2019-11-01 09:55:05 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:55:05 [METHOD] - "/company"에 get실행완료
2019-11-01 09:57:58 [METHOD] - "/company"에 get실행
2019-11-01 09:57:58 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 09:57:58 [METHOD] - "/company"에 get실행완료
2019-11-01 10:02:38 [METHOD] - "/company"에 get실행
2019-11-01 10:02:38 [METHOD] - "/company"에 get실행완료
2019-11-01 10:02:38 [ERROR] - "/company"에 get에서 ERROR : ReferenceError: device is not defined
2019-11-01 10:03:17 [METHOD] - "/company"에 get실행
2019-11-01 10:03:17 [METHOD] - "/company"에 get실행완료
2019-11-01 10:05:48 [METHOD] - "/company"에 get실행
2019-11-01 10:05:48 [METHOD] - "/company"에 get실행완료
2019-11-01 10:15:18 [METHOD] - "/company"에 get실행
2019-11-01 10:15:18 [METHOD] - "/company"에 get실행완료
2019-11-01 10:21:42 [METHOD] - "/company"에 get실행
2019-11-01 10:21:42 [METHOD] - "/company"에 get실행완료
2019-11-01 10:26:25 [METHOD] - "/company"에 get실행
2019-11-01 10:26:25 [METHOD] - "/company"에 get실행완료
2019-11-01 10:28:53 [METHOD] - "/company"에 get실행
2019-11-01 10:28:53 [METHOD] - "/company"에 get실행완료
2019-11-01 10:31:44 [METHOD] - "/company"에 get실행
2019-11-01 10:31:44 [METHOD] - "/company"에 get실행완료
2019-11-01 10:31:46 [METHOD] - "/company/device"에 get실행
2019-11-01 10:31:46 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 10:31:46 [METHOD] - "/company/device"에 get실행완료
2019-11-01 10:33:30 [METHOD] - "/company"에 get실행
2019-11-01 10:33:30 [METHOD] - "/company"에 get실행완료
2019-11-01 10:33:34 [METHOD] - "/company/device"에 get실행
2019-11-01 10:33:34 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 10:33:34 [METHOD] - "/company/device"에 get실행완료
2019-11-01 10:33:38 [METHOD] - "/company/user"에 post실행
2019-11-01 10:33:38 [METHOD] - "/company/user"에 post실행완료
2019-11-01 10:33:41 [METHOD] - "/company/device"에 get실행
2019-11-01 10:33:41 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 10:33:41 [METHOD] - "/company/device"에 get실행완료
2019-11-01 10:34:05 [METHOD] - "/company"에 get실행
2019-11-01 10:34:05 [METHOD] - "/company"에 get실행완료
2019-11-01 10:34:10 [METHOD] - "/company/device"에 get실행
2019-11-01 10:34:10 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 10:34:10 [METHOD] - "/company/device"에 get실행완료
2019-11-01 10:34:22 [METHOD] - "/company/user"에 post실행
2019-11-01 10:34:22 [METHOD] - "/company/user"에 post실행완료
2019-11-01 10:34:36 [METHOD] - "/company"에 get실행
2019-11-01 10:34:36 [METHOD] - "/company"에 get실행완료
2019-11-01 10:34:38 [METHOD] - "/company/user"에 post실행
2019-11-01 10:34:38 [METHOD] - "/company/user"에 post실행완료
2019-11-01 10:36:10 [METHOD] - "/company"에 get실행
2019-11-01 10:36:10 [METHOD] - "/company"에 get실행완료
2019-11-01 10:36:13 [ERROR] - "/company"에 없는 경로
2019-11-01 10:37:58 [METHOD] - "/company"에 get실행
2019-11-01 10:37:58 [METHOD] - "/company"에 get실행완료
2019-11-01 10:37:59 [METHOD] - "/company/user"에 post실행
2019-11-01 10:37:59 [ERROR] - "/company/user"에 post에서 ERROR : Error: WHERE parameter "companyId" has invalid "undefined" value
2019-11-01 10:46:00 [METHOD] - "/company"에 get실행
2019-11-01 10:46:00 [METHOD] - "/company"에 get실행완료
2019-11-01 10:46:02 [ERROR] - "/company"에 없는 경로
2019-11-01 10:48:24 [METHOD] - "/company"에 get실행
2019-11-01 10:48:24 [METHOD] - "/company"에 get실행완료
2019-11-01 10:48:26 [ERROR] - "/company"에 없는 경로
2019-11-01 10:49:16 [METHOD] - "/company"에 get실행
2019-11-01 10:49:16 [METHOD] - "/company"에 get실행완료
2019-11-01 10:49:18 [ERROR] - "/company"에 없는 경로
2019-11-01 10:50:22 [METHOD] - "/company"에 get실행
2019-11-01 10:50:22 [METHOD] - "/company"에 get실행완료
2019-11-01 10:50:24 [ERROR] - "/company"에 없는 경로
2019-11-01 10:51:31 [METHOD] - "/company"에 get실행
2019-11-01 10:51:31 [METHOD] - "/company"에 get실행완료
2019-11-01 10:51:32 [ERROR] - "/company"에 없는 경로
2019-11-01 10:51:37 [METHOD] - "/company"에 get실행
2019-11-01 10:51:37 [METHOD] - "/company"에 get실행완료
2019-11-01 10:51:38 [METHOD] - "/company/user"에 post실행
2019-11-01 10:51:38 [METHOD] - "/company/user"에 post실행완료
2019-11-01 10:51:39 [METHOD] - "/company/device"에 get실행
2019-11-01 10:51:39 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 10:51:39 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:00:33 [METHOD] - "/company"에 get실행
2019-11-01 11:00:33 [METHOD] - "/company"에 get실행완료
2019-11-01 11:00:35 [METHOD] - "/company/user"에 post실행
2019-11-01 11:00:35 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:00:36 [METHOD] - "/company/device"에 get실행
2019-11-01 11:00:36 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:00:36 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:01:53 [METHOD] - "/company"에 get실행
2019-11-01 11:01:53 [METHOD] - "/company"에 get실행완료
2019-11-01 11:01:54 [METHOD] - "/company/user"에 post실행
2019-11-01 11:01:54 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:01:56 [METHOD] - "/company/device"에 get실행
2019-11-01 11:01:56 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:01:56 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:04:11 [METHOD] - "/company"에 get실행
2019-11-01 11:04:11 [METHOD] - "/company"에 get실행완료
2019-11-01 11:04:12 [METHOD] - "/company/user"에 post실행
2019-11-01 11:04:12 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:04:13 [METHOD] - "/company/device"에 get실행
2019-11-01 11:04:13 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:04:13 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:09:36 [METHOD] - "/company"에 get실행
2019-11-01 11:09:36 [METHOD] - "/company"에 get실행완료
2019-11-01 11:09:37 [METHOD] - "/company/user"에 post실행
2019-11-01 11:09:37 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:09:39 [METHOD] - "/company/device"에 get실행
2019-11-01 11:09:39 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:09:39 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:09:45 [METHOD] - "/company"에 get실행
2019-11-01 11:09:45 [METHOD] - "/company"에 get실행완료
2019-11-01 11:09:47 [METHOD] - "/company/user"에 post실행
2019-11-01 11:09:47 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:09:49 [METHOD] - "/company/device"에 get실행
2019-11-01 11:09:49 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:09:49 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:10:03 [METHOD] - "/company"에 get실행
2019-11-01 11:10:03 [METHOD] - "/company"에 get실행완료
2019-11-01 11:10:05 [METHOD] - "/company/user"에 post실행
2019-11-01 11:10:05 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:10:07 [METHOD] - "/company"에 get실행
2019-11-01 11:10:07 [METHOD] - "/company"에 get실행완료
2019-11-01 11:10:08 [METHOD] - "/company/user"에 post실행
2019-11-01 11:10:08 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:10:10 [METHOD] - "/company/device"에 get실행
2019-11-01 11:10:10 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:10:10 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:10:24 [METHOD] - "/company"에 get실행
2019-11-01 11:10:24 [METHOD] - "/company"에 get실행완료
2019-11-01 11:10:25 [METHOD] - "/company/user"에 post실행
2019-11-01 11:10:25 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:10:26 [METHOD] - "/company/device"에 get실행
2019-11-01 11:10:26 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:10:26 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:12:21 [METHOD] - "/company"에 get실행
2019-11-01 11:12:21 [METHOD] - "/company"에 get실행완료
2019-11-01 11:12:24 [METHOD] - "/company/user"에 post실행
2019-11-01 11:12:24 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:12:26 [METHOD] - "/company/device"에 get실행
2019-11-01 11:12:26 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:12:26 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:12:52 [METHOD] - "/company/userAdd"에 post실행
2019-11-01 11:12:52 [METHOD] - "/company/userAdd"에 post실행완료
2019-11-01 11:12:52 [ERROR] - "/company/userAdd"에 post에서 ERROR : ReferenceError: result is not defined
2019-11-01 11:14:41 [METHOD] - "/company/user"에 post실행
2019-11-01 11:14:41 [ERROR] - "/company/user"에 post에서 ERROR : Error: WHERE parameter "companyId" has invalid "undefined" value
2019-11-01 11:14:43 [METHOD] - "/company"에 get실행
2019-11-01 11:14:43 [METHOD] - "/company"에 get실행완료
2019-11-01 11:14:59 [METHOD] - "/company/device"에 get실행
2019-11-01 11:14:59 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:14:59 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:15:23 [METHOD] - "/company/user"에 post실행
2019-11-01 11:15:23 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:15:25 [METHOD] - "/company/device"에 get실행
2019-11-01 11:15:25 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:15:25 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:15:54 [METHOD] - "/company/userAdd"에 post실행
2019-11-01 11:15:54 [QUERY] - INSERT INTO `branchs` (`id`,`name`,`expiredDate`,`companyId`,`busNumber`,`isMain`,`address`,`tel`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?);
2019-11-01 11:15:54 [METHOD] - "/company/userAdd"에 post실행완료
2019-11-01 11:15:57 [METHOD] - "/company/user"에 post실행
2019-11-01 11:15:57 [ERROR] - "/company/user"에 post에서 ERROR : Error: WHERE parameter "companyId" has invalid "undefined" value
2019-11-01 11:15:58 [METHOD] - "/company"에 get실행
2019-11-01 11:15:58 [METHOD] - "/company"에 get실행완료
2019-11-01 11:15:58 [METHOD] - "/company/user"에 post실행
2019-11-01 11:15:58 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:16:13 [METHOD] - "/company"에 get실행
2019-11-01 11:16:13 [METHOD] - "/company"에 get실행완료
2019-11-01 11:16:14 [METHOD] - "/company/user"에 post실행
2019-11-01 11:16:14 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:16:15 [METHOD] - "/company/device"에 get실행
2019-11-01 11:16:15 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:16:15 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:17:41 [METHOD] - "/company/userAdd"에 post실행
2019-11-01 11:17:41 [QUERY] - INSERT INTO `branchs` (`id`,`name`,`expiredDate`,`companyId`,`busNumber`,`isMain`,`address`,`tel`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?);
2019-11-01 11:17:41 [METHOD] - "/company/userAdd"에 post실행완료
2019-11-01 11:17:43 [METHOD] - "/company/user"에 post실행
2019-11-01 11:17:43 [ERROR] - "/company/user"에 post에서 ERROR : Error: WHERE parameter "companyId" has invalid "undefined" value
2019-11-01 11:17:43 [METHOD] - "/company"에 get실행
2019-11-01 11:17:43 [METHOD] - "/company"에 get실행완료
2019-11-01 11:17:46 [METHOD] - "/company/user"에 post실행
2019-11-01 11:17:46 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:17:54 [METHOD] - "/company"에 get실행
2019-11-01 11:17:54 [METHOD] - "/company"에 get실행완료
2019-11-01 11:17:58 [METHOD] - "/company"에 delete실행
2019-11-01 11:17:58 [METHOD] - "/company"에 delete실행완료
2019-11-01 11:17:58 [METHOD] - "/company"에 delete실행
2019-11-01 11:17:58 [METHOD] - "/company"에 delete실행완료
2019-11-01 11:17:58 [QUERY] - DELETE FROM `branch_devices` WHERE `branchId` = 13
2019-11-01 11:17:58 [QUERY] - DELETE FROM `branch_devices` WHERE `branchId` = 16
2019-11-01 11:17:58 [QUERY] - DELETE FROM `user_groups` WHERE `branchId` = 13
2019-11-01 11:17:58 [QUERY] - DELETE FROM `user_groups` WHERE `branchId` = 16
2019-11-01 11:17:58 [QUERY] - DELETE FROM `branchs` WHERE `id` = 13
2019-11-01 11:17:58 [QUERY] - DELETE FROM `branchs` WHERE `id` = 16
2019-11-01 11:17:58 [QUERY] - DELETE FROM `companys` WHERE `id` = 16
2019-11-01 11:17:58 [QUERY] - DELETE FROM `companys` WHERE `id` = 16
2019-11-01 11:17:58 [METHOD] - "/company"에 get실행
2019-11-01 11:17:58 [METHOD] - "/company"에 get실행완료
2019-11-01 11:18:01 [METHOD] - "/company/user"에 post실행
2019-11-01 11:18:01 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:18:45 [METHOD] - "/company"에 get실행
2019-11-01 11:18:45 [METHOD] - "/company"에 get실행완료
2019-11-01 11:19:12 [METHOD] - "/company/device"에 get실행
2019-11-01 11:19:12 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:19:12 [METHOD] - "/company/device"에 get실행완료
=======
2019-11-01 09:20:03 [METHOD] - "/board"에 get실행
2019-11-01 09:20:03 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:20:03 [METHOD] - "/board"에 get실행완료
2019-11-01 09:20:04 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:20:04 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:28:08 [METHOD] - "/board"에 get실행
2019-11-01 09:28:08 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:28:08 [METHOD] - "/board"에 get실행완료
2019-11-01 09:28:11 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:28:11 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:28:31 [METHOD] - "/board"에 post실행
2019-11-01 09:28:31 [QUERY] - INSERT INTO `boards` (`id`,`userId`,`title`,`content`,`hit`,`boardPostId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
2019-11-01 09:28:31 [ERROR] - "/board"에 post에서 ERROR : SequelizeDatabaseError: Incorrect integer value: 'null' for column `node_test`.`boards`.`userId` at row 1
2019-11-01 09:28:32 [METHOD] - "/board"에 get실행
2019-11-01 09:28:32 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:28:32 [METHOD] - "/board"에 get실행완료
2019-11-01 09:28:53 [METHOD] - "/board"에 post실행
2019-11-01 09:28:53 [QUERY] - INSERT INTO `boards` (`id`,`userId`,`title`,`content`,`hit`,`boardPostId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
2019-11-01 09:28:53 [ERROR] - "/board"에 post에서 ERROR : SequelizeDatabaseError: Incorrect integer value: 'null' for column `node_test`.`boards`.`userId` at row 1
2019-11-01 09:28:54 [METHOD] - "/board"에 get실행
2019-11-01 09:28:54 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:28:54 [METHOD] - "/board"에 get실행완료
2019-11-01 09:28:55 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:28:55 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:29:02 [METHOD] - "/board"에 get실행
2019-11-01 09:29:02 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:29:02 [METHOD] - "/board"에 get실행완료
2019-11-01 09:29:07 [METHOD] - "/board"에 post실행
2019-11-01 09:29:07 [QUERY] - INSERT INTO `boards` (`id`,`userId`,`title`,`content`,`hit`,`boardPostId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
2019-11-01 09:29:07 [ERROR] - "/board"에 post에서 ERROR : SequelizeDatabaseError: Incorrect integer value: 'null' for column `node_test`.`boards`.`userId` at row 1
2019-11-01 09:29:08 [METHOD] - "/board"에 get실행
2019-11-01 09:29:08 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:29:08 [METHOD] - "/board"에 get실행완료
2019-11-01 09:29:30 [METHOD] - "/board"에 post실행
2019-11-01 09:29:30 [QUERY] - INSERT INTO `boards` (`id`,`userId`,`title`,`content`,`hit`,`boardPostId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
2019-11-01 09:29:30 [ERROR] - "/board"에 post에서 ERROR : SequelizeDatabaseError: Incorrect integer value: 'null' for column `node_test`.`boards`.`userId` at row 1
2019-11-01 09:30:09 [METHOD] - "/board"에 get실행
2019-11-01 09:30:09 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:30:09 [METHOD] - "/board"에 get실행완료
2019-11-01 09:30:17 [METHOD] - "/"에 post실행
2019-11-01 09:30:17 [METHOD] - "/"에 signToken메소드 실행
2019-11-01 09:30:17 [METHOD] - "/"에 signToken메소드 실행완료
2019-11-01 09:30:17 [NOTICE] - ORG_ID : asdf 로그인
2019-11-01 09:30:17 [METHOD] - "/"에 post실행 완료
2019-11-01 09:30:18 [METHOD] - "/board"에 get실행
2019-11-01 09:30:18 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:30:18 [METHOD] - "/board"에 get실행완료
2019-11-01 09:30:26 [METHOD] - "/board"에 post실행
2019-11-01 09:30:26 [QUERY] - INSERT INTO `boards` (`id`,`userId`,`title`,`content`,`hit`,`boardPostId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
2019-11-01 09:30:26 [QUERY] - INSERT INTO `files` (`id`,`orgName`,`size`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);
2019-11-01 09:30:26 [QUERY] - INSERT INTO `board_files` (`id`,`boardId`,`fileId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);
2019-11-01 09:30:27 [METHOD] - "/board"에 get실행
2019-11-01 09:30:27 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:30:27 [METHOD] - "/board"에 get실행완료
2019-11-01 09:30:28 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:30:28 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:36:03 [METHOD] - "/board"에 get실행
2019-11-01 09:36:03 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:36:03 [METHOD] - "/board"에 get실행완료
2019-11-01 09:36:04 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:36:04 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:38:16 [METHOD] - "/board"에 get실행
2019-11-01 09:38:16 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:38:16 [METHOD] - "/board"에 get실행완료
2019-11-01 09:38:17 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:38:17 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:42:55 [METHOD] - "/board"에 get실행
2019-11-01 09:42:55 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:42:55 [METHOD] - "/board"에 get실행완료
2019-11-01 09:42:56 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:42:56 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:43:13 [METHOD] - "/board"에 get실행
2019-11-01 09:43:13 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:43:13 [METHOD] - "/board"에 get실행완료
2019-11-01 09:43:15 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:43:15 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:46:04 [METHOD] - "/board"에 get실행
2019-11-01 09:46:04 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:46:04 [METHOD] - "/board"에 get실행완료
2019-11-01 09:46:06 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:46:06 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:47:40 [METHOD] - "/board"에 get실행
2019-11-01 09:47:40 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:47:40 [METHOD] - "/board"에 get실행완료
2019-11-01 09:47:40 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:47:40 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:49:43 [METHOD] - "/board"에 get실행
2019-11-01 09:49:43 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:49:43 [METHOD] - "/board"에 get실행완료
2019-11-01 09:49:44 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:49:44 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:53:03 [METHOD] - "/board"에 get실행
2019-11-01 09:53:03 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:53:03 [METHOD] - "/board"에 get실행완료
2019-11-01 09:53:04 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:53:04 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 09:58:35 [METHOD] - "/board"에 get실행
2019-11-01 09:58:35 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 09:58:35 [METHOD] - "/board"에 get실행완료
2019-11-01 09:58:36 [METHOD] - "/board/comment"에 post실행
2019-11-01 09:58:36 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 10:11:29 [METHOD] - "/board"에 get실행
2019-11-01 10:11:29 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 10:11:29 [METHOD] - "/board"에 get실행완료
2019-11-01 10:11:30 [METHOD] - "/board/comment"에 post실행
2019-11-01 10:11:30 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 10:16:24 [METHOD] - "/board"에 get실행
2019-11-01 10:16:24 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 10:16:24 [METHOD] - "/board"에 get실행완료
2019-11-01 10:16:24 [METHOD] - "/board/comment"에 post실행
2019-11-01 10:16:24 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 10:20:49 [METHOD] - "/company"에 get실행
2019-11-01 10:20:49 [METHOD] - "/company"에 get실행완료
2019-11-01 10:21:02 [METHOD] - "/company/user"에 post실행
2019-11-01 10:21:02 [METHOD] - "/company/user"에 post실행완료
2019-11-01 10:22:39 [METHOD] - "/board"에 get실행
2019-11-01 10:22:39 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 10:22:39 [METHOD] - "/board"에 get실행완료
2019-11-01 10:22:40 [METHOD] - "/board/comment"에 post실행
2019-11-01 10:22:40 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 10:41:53 [METHOD] - "/board"에 post실행
2019-11-01 10:41:53 [QUERY] - INSERT INTO `boards` (`id`,`userId`,`title`,`content`,`hit`,`boardPostId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
2019-11-01 10:41:55 [METHOD] - "/board"에 get실행
2019-11-01 10:41:55 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 10:41:55 [METHOD] - "/board"에 get실행완료
2019-11-01 10:41:57 [METHOD] - "/board/comment"에 post실행
2019-11-01 10:41:57 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 10:51:05 [METHOD] - "/board/comment"에 post실행
2019-11-01 10:51:05 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 10:52:49 [METHOD] - "/board"에 get실행
2019-11-01 10:52:49 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 10:52:49 [METHOD] - "/board"에 get실행완료
2019-11-01 10:52:49 [METHOD] - "/board/comment"에 post실행
2019-11-01 10:52:49 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 11:11:37 [METHOD] - "/board"에 get실행
2019-11-01 11:11:37 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 11:11:38 [METHOD] - "/board"에 get실행완료
2019-11-01 11:11:38 [METHOD] - "/board/comment"에 post실행
2019-11-01 11:11:38 [METHOD] - "/board/comment"에 post실행종료
<<<<<<< HEAD
2019-11-01 11:12:31 [METHOD] - "/board"에 get실행
2019-11-01 11:12:31 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 11:12:31 [METHOD] - "/board"에 get실행완료
2019-11-01 11:12:32 [METHOD] - "/board/comment"에 post실행
2019-11-01 11:12:33 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 11:19:50 [METHOD] - "/company"에 get실행
2019-11-01 11:19:50 [METHOD] - "/company"에 get실행완료
2019-11-01 11:24:23 [METHOD] - "/board"에 get실행
2019-11-01 11:24:46 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 11:24:46 [METHOD] - "/board"에 get실행완료
2019-11-01 11:24:47 [METHOD] - "/board"에 get실행
2019-11-01 11:24:47 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 11:24:47 [METHOD] - "/board"에 get실행완료
2019-11-01 11:24:50 [METHOD] - "/board/comment"에 post실행
2019-11-01 11:24:50 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 11:25:05 [METHOD] - "/board/comment"에 post실행
2019-11-01 11:25:05 [METHOD] - "/board/comment"에 post실행종료
=======
>>>>>>> 1e8b8febf1c101902ae8dd33e379cd7661f3bf3a
2019-11-01 11:31:01 [METHOD] - "/company"에 get실행
2019-11-01 11:31:01 [METHOD] - "/company"에 get실행완료
2019-11-01 11:31:30 [METHOD] - "/company/user"에 post실행
2019-11-01 11:31:30 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:32:42 [METHOD] - "/company/device"에 get실행
2019-11-01 11:32:42 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:32:42 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:32:49 [METHOD] - "/company"에 get실행
2019-11-01 11:32:49 [METHOD] - "/company"에 get실행완료
2019-11-01 11:32:50 [METHOD] - "/company/device"에 get실행
2019-11-01 11:32:50 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:32:50 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:35:08 [METHOD] - "/company"에 get실행
2019-11-01 11:35:08 [METHOD] - "/company"에 get실행완료
2019-11-01 11:35:09 [METHOD] - "/company/user"에 post실행
2019-11-01 11:35:09 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:35:11 [METHOD] - "/company"에 get실행
2019-11-01 11:35:11 [METHOD] - "/company"에 get실행완료
2019-11-01 11:35:12 [METHOD] - "/company/device"에 get실행
2019-11-01 11:35:12 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:35:12 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:35:17 [METHOD] - "/company/user"에 post실행
2019-11-01 11:35:17 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:35:18 [METHOD] - "/company/device"에 get실행
2019-11-01 11:35:18 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:35:18 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:35:52 [METHOD] - "/company"에 get실행
2019-11-01 11:35:52 [METHOD] - "/company"에 get실행완료
2019-11-01 11:36:02 [METHOD] - "/company/user"에 post실행
2019-11-01 11:36:02 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:36:04 [METHOD] - "/company/device"에 get실행
2019-11-01 11:36:04 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:36:04 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:36:14 [METHOD] - "/company"에 get실행
2019-11-01 11:36:14 [METHOD] - "/company"에 get실행완료
2019-11-01 11:36:16 [METHOD] - "/company/user"에 post실행
2019-11-01 11:36:16 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:36:40 [METHOD] - "/company"에 get실행
2019-11-01 11:36:40 [METHOD] - "/company"에 get실행완료
2019-11-01 11:36:42 [METHOD] - "/company/user"에 post실행
2019-11-01 11:36:42 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:36:43 [METHOD] - "/company/device"에 get실행
2019-11-01 11:36:43 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:36:43 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:37:47 [METHOD] - "/board"에 get실행
2019-11-01 11:37:47 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 11:37:47 [METHOD] - "/board"에 get실행완료
2019-11-01 11:37:48 [METHOD] - "/board/comment"에 post실행
2019-11-01 11:37:48 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 11:37:50 [METHOD] - "/board/comment/add"에 post실행
2019-11-01 11:37:50 [METHOD] - "/board/comment/add"에 post실행완료
2019-11-01 11:37:53 [METHOD] - "/board/comment/add"에 post실행
2019-11-01 11:37:53 [METHOD] - "/board/comment/add"에 post실행완료
2019-11-01 11:38:31 [METHOD] - "/board/comment"에 post실행
2019-11-01 11:38:31 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 11:38:50 [METHOD] - "/company"에 get실행
2019-11-01 11:38:50 [METHOD] - "/company"에 get실행완료
2019-11-01 11:38:52 [METHOD] - "/company/device"에 get실행
2019-11-01 11:38:52 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:38:52 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:38:56 [METHOD] - "/company/user"에 post실행
2019-11-01 11:38:56 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:39:13 [METHOD] - "/company"에 get실행
2019-11-01 11:39:13 [METHOD] - "/company"에 get실행완료
2019-11-01 11:39:29 [METHOD] - "/company/device"에 get실행
2019-11-01 11:39:29 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:39:29 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:39:39 [METHOD] - "/company/user"에 post실행
2019-11-01 11:39:39 [METHOD] - "/company/user"에 post실행완료
2019-11-01 11:39:41 [METHOD] - "/company/device"에 get실행
2019-11-01 11:39:41 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:39:41 [METHOD] - "/company/device"에 get실행완료
2019-11-01 11:40:10 [METHOD] - "/company"에 get실행
2019-11-01 11:40:10 [METHOD] - "/company"에 get실행완료
2019-11-01 11:40:11 [METHOD] - "/company/device"에 get실행
2019-11-01 11:40:11 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 11:40:11 [METHOD] - "/company/device"에 get실행완료
<<<<<<< HEAD
2019-11-01 14:19:22 [METHOD] - "/company"에 get실행
2019-11-01 14:19:22 [METHOD] - "/company"에 get실행완료
2019-11-01 14:19:23 [METHOD] - "/company/user"에 post실행
2019-11-01 14:19:23 [METHOD] - "/company/user"에 post실행완료
2019-11-01 14:19:31 [METHOD] - "/company"에 get실행
2019-11-01 14:19:31 [METHOD] - "/company"에 get실행완료
2019-11-01 14:19:40 [METHOD] - "/board"에 get실행
2019-11-01 14:19:40 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 14:19:40 [METHOD] - "/board"에 get실행완료
2019-11-01 14:19:44 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:19:44 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:20:32 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:20:32 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:20:38 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:20:38 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:20:46 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:20:46 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:21:07 [METHOD] - "/company"에 get실행
2019-11-01 14:21:07 [METHOD] - "/company"에 get실행완료
2019-11-01 14:21:12 [METHOD] - "/company/user"에 post실행
2019-11-01 14:21:12 [METHOD] - "/company/user"에 post실행완료
2019-11-01 14:21:14 [METHOD] - "/board"에 get실행
2019-11-01 14:21:14 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 14:21:14 [METHOD] - "/board"에 get실행완료
2019-11-01 14:21:16 [METHOD] - "/company"에 get실행
2019-11-01 14:21:16 [METHOD] - "/company"에 get실행완료
2019-11-01 14:21:23 [METHOD] - "/company/user"에 post실행
2019-11-01 14:21:23 [METHOD] - "/company/user"에 post실행완료
2019-11-01 14:21:28 [METHOD] - "/board"에 get실행
2019-11-01 14:21:28 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 14:21:28 [METHOD] - "/board"에 get실행완료
2019-11-01 14:21:29 [METHOD] - "/company"에 get실행
2019-11-01 14:21:29 [METHOD] - "/company"에 get실행완료
2019-11-01 14:21:41 [METHOD] - "/company/device"에 get실행
2019-11-01 14:21:41 [QUERY] - SELECT `id`, `name`, `firmVersion`, `isOn`, `createdAt`, `updatedAt` FROM `devices` AS `devices`;
2019-11-01 14:21:41 [METHOD] - "/company/device"에 get실행완료
2019-11-01 14:26:53 [METHOD] - "/board"에 get실행
2019-11-01 14:26:53 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 14:26:53 [METHOD] - "/board"에 get실행완료
2019-11-01 14:26:54 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:26:54 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:27:08 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:27:08 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:28:44 [METHOD] - "/board"에 get실행
2019-11-01 14:28:44 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 14:28:44 [METHOD] - "/board"에 get실행완료
2019-11-01 14:28:47 [METHOD] - "/board/comment"에 post실행
2019-11-01 14:28:47 [METHOD] - "/board/comment"에 post실행종료
2019-11-01 14:42:08 [METHOD] - "/company"에 get실행
2019-11-01 14:42:08 [METHOD] - "/company"에 get실행완료
2019-11-01 14:42:13 [METHOD] - "/company/user"에 post실행
2019-11-01 14:42:13 [METHOD] - "/company/user"에 post실행완료
2019-11-01 14:43:21 [METHOD] - "/company"에 get실행
2019-11-01 14:43:21 [METHOD] - "/company"에 get실행완료
2019-11-01 14:46:32 [METHOD] - "/company"에 get실행
2019-11-01 14:46:32 [METHOD] - "/company"에 get실행완료
2019-11-01 14:54:35 [METHOD] - "/company"에 get실행
2019-11-01 14:54:35 [METHOD] - "/company"에 get실행완료
2019-11-01 14:54:37 [METHOD] - "/company/detail"에 post실행
2019-11-01 14:54:37 [ERROR] - "/company/detail"에 post에서 ERROR : ReferenceError: Board_device is not defined
2019-11-01 14:55:11 [METHOD] - "/company/detail"에 post실행
2019-11-01 14:55:11 [METHOD] - "/company/detail"에 post실행완료
2019-11-01 14:58:42 [METHOD] - "/company"에 get실행
2019-11-01 14:58:42 [METHOD] - "/company"에 get실행완료
2019-11-01 14:58:44 [METHOD] - "/company/detail"에 post실행
2019-11-01 14:58:44 [METHOD] - "/company/detail"에 post실행완료
2019-11-01 15:01:04 [METHOD] - "/board"에 get실행
2019-11-01 15:01:04 [QUERY] - SELECT `boards`.`id`, `boards`.`userId`, `boards`.`title`, `boards`.`content`, `boards`.`hit`, `boards`.`boardPostId`, `boards`.`createdAt`, `boards`.`updatedAt`, `board_post`.`id` AS `board_post.id`, `board_post`.`name` AS `board_post.name`, `board_post`.`createdAt` AS `board_post.createdAt`, `board_post`.`updatedAt` AS `board_post.updatedAt`, `user`.`id` AS `user.id`, `user`.`orgId` AS `user.orgId`, `user`.`userNm` AS `user.userNm`, `user`.`userPw` AS `user.userPw`, `user`.`userYn` AS `user.userYn`, `user`.`userGroupId` AS `user.userGroupId`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `board_files`.`id` AS `board_files.id`, `board_files`.`boardId` AS `board_files.boardId`, `board_files`.`fileId` AS `board_files.fileId`, `board_files`.`createdAt` AS `board_files.createdAt`, `board_files`.`updatedAt` AS `board_files.updatedAt`, `board_files->file`.`id` AS `board_files.file.id`, `board_files->file`.`orgName` AS `board_files.file.orgName`, `board_files->file`.`size` AS `board_files.file.size`, `board_files->file`.`createdAt` AS `board_files.file.createdAt`, `board_files->file`.`updatedAt` AS `board_files.file.updatedAt` FROM `boards` AS `boards` LEFT OUTER JOIN `board_posts` AS `board_post` ON `boards`.`boardPostId` = `board_post`.`id` LEFT OUTER JOIN `users` AS `user` ON `boards`.`userId` = `user`.`id` LEFT OUTER JOIN `board_files` AS `board_files` ON `boards`.`id` = `board_files`.`boardId` LEFT OUTER JOIN `files` AS `board_files->file` ON `board_files`.`fileId` = `board_files->file`.`id`;
2019-11-01 15:01:04 [METHOD] - "/board"에 get실행완료
2019-11-01 15:01:04 [METHOD] - "/company"에 get실행
2019-11-01 15:01:04 [METHOD] - "/company"에 get실행완료
2019-11-01 15:01:06 [METHOD] - "/company/detail"에 post실행
2019-11-01 15:01:06 [METHOD] - "/company/detail"에 post실행완료
2019-11-01 15:01:30 [METHOD] - "/company/detail"에 post실행
2019-11-01 15:01:30 [METHOD] - "/company/detail"에 post실행완료
2019-11-01 18:03:42 [METHOD] - "/company"에 get실행
2019-11-01 18:03:42 [METHOD] - "/company"에 get실행완료
2019-11-01 18:03:44 [METHOD] - "/company/detail"에 post실행
2019-11-01 18:03:44 [METHOD] - "/company/detail"에 post실행완료
=======
>>>>>>> d861c9bd21c56e8102392c3cf28e2db76ae32c7c
>>>>>>> de058c2d929c728f2930736333971f4fea396eb5
